// <auto-generated />
using System;
using Marvel.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marvel.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20230415031309_add-external-login-to-user")]
    partial class addexternallogintouser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marvel.IDP.Entities.ExternalLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProviderSubjectId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExternalLogins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22190394-366c-498d-adc3-968c45a49514"),
                            ConcurrencyStamp = "c8209abb-dfe4-42d0-9f59-ed17c138c8bd",
                            ProviderName = "AAD",
                            ProviderSubjectId = "3QpPcpy8e6AgExZkiSembDW5U_ITlo8raKLLLZzbsVE",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972")
                        });
                });

            modelBuilder.Entity("Marvel.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Active = true,
                            ConcurrencyStamp = "0ec4f208-96c7-464c-9980-bccdc1b114f6",
                            Password = "password",
                            Subject = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            UserName = "David"
                        },
                        new
                        {
                            Id = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Active = true,
                            ConcurrencyStamp = "f31afc85-193b-4020-bcbb-901df93cd733",
                            Password = "password",
                            Subject = "b7539694-97e7-4dfe-84da-b4256e1ff5c7",
                            UserName = "Emma"
                        },
                        new
                        {
                            Id = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Active = true,
                            ConcurrencyStamp = "d5652652-0c72-4cf8-bbf7-c75be9f1b684",
                            Password = "",
                            Subject = "mx001",
                            UserName = "alice"
                        },
                        new
                        {
                            Id = new Guid("33229d33-99e0-41b3-b18d-4f72127e3973"),
                            Active = true,
                            ConcurrencyStamp = "8d5f4e6c-1220-45da-8285-bad259a2f357",
                            Password = "",
                            Subject = "mx002",
                            UserName = "bob"
                        },
                        new
                        {
                            Id = new Guid("43229d33-99e0-41b3-b18d-4f72127e3974"),
                            Active = true,
                            ConcurrencyStamp = "b974de26-8a9f-4d28-a213-a8e304d32cb2",
                            Password = "",
                            Subject = "mx003",
                            UserName = "dave"
                        },
                        new
                        {
                            Id = new Guid("53229d33-99e0-41b3-b18d-4f72127e3975"),
                            Active = true,
                            ConcurrencyStamp = "684a0b66-2b91-4bd5-9d71-2ae969ee2f4f",
                            Password = "",
                            Subject = "mx004",
                            UserName = "amos"
                        });
                });

            modelBuilder.Entity("Marvel.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("398d7691-d1a3-4790-b45b-a1736ab5bf3f"),
                            ConcurrencyStamp = "a6d41d80-2004-44d6-88af-9fc3e96bdb42",
                            Type = "given_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "David"
                        },
                        new
                        {
                            Id = new Guid("520a3f12-21f4-41b9-a406-b4e4e379360b"),
                            ConcurrencyStamp = "a0e87dbb-6dd5-4437-8eb1-76d14941fc50",
                            Type = "family_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Flagg"
                        },
                        new
                        {
                            Id = new Guid("171330a1-1a7c-4686-8a7b-3a4ee76aa876"),
                            ConcurrencyStamp = "b50d7bb4-3135-48e5-b260-6d66fadc5c89",
                            Type = "country",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "nl"
                        },
                        new
                        {
                            Id = new Guid("a03ddc4e-75ed-42a9-b44d-1e7d6623e13a"),
                            ConcurrencyStamp = "8350f1cf-7994-4a46-b207-e11007f903c9",
                            Type = "role",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "FreeUser"
                        },
                        new
                        {
                            Id = new Guid("fe231468-c846-473a-abfa-138826fa7937"),
                            ConcurrencyStamp = "95a645a1-2de7-4bd1-8c80-62d6986258d8",
                            Type = "given_name",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Emma"
                        },
                        new
                        {
                            Id = new Guid("7d2823fa-9020-4e5c-8186-c756f156f094"),
                            ConcurrencyStamp = "3bcf3646-bcae-461d-abb1-a55b10714650",
                            Type = "family_name",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Flagg"
                        },
                        new
                        {
                            Id = new Guid("7268e08c-a854-46b1-82ed-58c63f70ef60"),
                            ConcurrencyStamp = "0b373025-fa17-4e91-ad5a-7078daba35b9",
                            Type = "country",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "be"
                        },
                        new
                        {
                            Id = new Guid("e8b51ef0-d063-4df2-9eee-246bf18c4907"),
                            ConcurrencyStamp = "945491c2-8204-4480-a935-2d94318eb308",
                            Type = "role",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "PayingUser"
                        },
                        new
                        {
                            Id = new Guid("5d3b0137-8029-43cb-b10a-e7323f3096f7"),
                            ConcurrencyStamp = "7f37a200-88ae-4805-9201-eff742b31453",
                            Type = "name",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "Alice Smith"
                        },
                        new
                        {
                            Id = new Guid("6a0b074f-7250-4264-bfa1-5d46ad1c7281"),
                            ConcurrencyStamp = "7d53be55-2aa8-4e48-b00b-90fc98d3deaa",
                            Type = "given_name",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "Alice"
                        },
                        new
                        {
                            Id = new Guid("8237c50e-e05e-45af-9ea2-4320437c35ba"),
                            ConcurrencyStamp = "004d0260-9593-45e1-8a9d-88b0d29c4cf5",
                            Type = "family_name",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "Smith"
                        },
                        new
                        {
                            Id = new Guid("564d7f9c-4e2f-4be3-8eb6-c6de6be3b649"),
                            ConcurrencyStamp = "7b50129e-e8ba-4461-a72c-4b20c0256f75",
                            Type = "email",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "AliceSmith@email.com"
                        },
                        new
                        {
                            Id = new Guid("1d3e6a78-0219-4b74-aca1-cf09d1e37ab1"),
                            ConcurrencyStamp = "0ffee977-d5b8-4cf6-9f0a-b47c819347a1",
                            Type = "email_verified",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "true"
                        },
                        new
                        {
                            Id = new Guid("dbfadbbf-315c-453e-9e1d-80dda4ec1b90"),
                            ConcurrencyStamp = "c9786bfe-86c4-433e-ae82-575e3ce7ee07",
                            Type = "website",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "http://alice.com"
                        },
                        new
                        {
                            Id = new Guid("348f9038-ddad-4242-aad6-4668e273fe45"),
                            ConcurrencyStamp = "f0665579-80d0-4894-a58e-ceb6457789ff",
                            Type = "address",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("c0fd2dd8-dcfd-4064-abb9-0cc659a201cc"),
                            ConcurrencyStamp = "23026ecb-ea3d-48a0-bd68-166c6f2760ac",
                            Type = "employee_classification",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "B10"
                        },
                        new
                        {
                            Id = new Guid("e2d82940-9ebd-41cb-abe2-fe34c4d9c182"),
                            ConcurrencyStamp = "1e484bcd-1bdd-440f-8c6d-243d8cb92103",
                            Type = "birthdate",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "1988-10-14"
                        },
                        new
                        {
                            Id = new Guid("f8f23e92-51a0-42a6-a194-bbf70ed59123"),
                            ConcurrencyStamp = "822f3b78-02f7-42d4-a8ea-ec287bbcc075",
                            Type = "nationality",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "British"
                        },
                        new
                        {
                            Id = new Guid("a0bf57d8-3d4a-4b0b-8548-0dccd143afaf"),
                            ConcurrencyStamp = "ce12e99f-d788-4671-932c-88beae9d6ddb",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "toronto_au"
                        },
                        new
                        {
                            Id = new Guid("d4c2a104-74a5-4bf5-ad7b-1b7bf7e59622"),
                            ConcurrencyStamp = "6863a322-938e-499a-9c9d-93291e04fef2",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "public_market"
                        },
                        new
                        {
                            Id = new Guid("a52918ed-7d6c-4439-8640-dbd4c9732638"),
                            ConcurrencyStamp = "56050713-f2b4-49f1-83a7-076c3c1a19a2",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "auth_demo_dev"
                        },
                        new
                        {
                            Id = new Guid("5c3ef3ad-4312-42af-8c70-ab362c56ec1d"),
                            ConcurrencyStamp = "060c4ee3-0a60-477d-be79-8bcb7ea8026b",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "auth_demo_tester"
                        });
                });

            modelBuilder.Entity("Marvel.IDP.Entities.ExternalLogin", b =>
                {
                    b.HasOne("Marvel.IDP.Entities.User", "User")
                        .WithMany("ExternalLogin")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Marvel.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("Marvel.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Marvel.IDP.Entities.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("ExternalLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
