// <auto-generated />
using System;
using Marvel.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marvel.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20230414222205_add-external-logins")]
    partial class addexternallogins
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marvel.IDP.Entities.ExternalLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProviderSubjectId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExternalLogins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3440df3c-967b-4c1e-84b1-96b41ede97d8"),
                            ConcurrencyStamp = "10ea7287-39f4-4a91-8897-25f02fa433b8",
                            ProviderName = "AAD",
                            ProviderSubjectId = "3QpPcpy8e6AgExZkiSembDW5U_ITlo8raKLLLZzbsVE",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972")
                        });
                });

            modelBuilder.Entity("Marvel.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Active = true,
                            ConcurrencyStamp = "a2f01608-2736-47f3-8937-09f56649fe10",
                            Password = "password",
                            Subject = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            UserName = "David"
                        },
                        new
                        {
                            Id = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Active = true,
                            ConcurrencyStamp = "d303c2a2-9709-4ac2-9fde-f0b3f0c7d460",
                            Password = "password",
                            Subject = "b7539694-97e7-4dfe-84da-b4256e1ff5c7",
                            UserName = "Emma"
                        },
                        new
                        {
                            Id = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Active = true,
                            ConcurrencyStamp = "7ae2883c-3876-41cb-ac6d-f2a669edc877",
                            Password = "",
                            Subject = "mx001",
                            UserName = "alice"
                        },
                        new
                        {
                            Id = new Guid("33229d33-99e0-41b3-b18d-4f72127e3973"),
                            Active = true,
                            ConcurrencyStamp = "4dff6115-2dc1-469c-bd71-2fb8324896dd",
                            Password = "",
                            Subject = "mx002",
                            UserName = "bob"
                        },
                        new
                        {
                            Id = new Guid("43229d33-99e0-41b3-b18d-4f72127e3974"),
                            Active = true,
                            ConcurrencyStamp = "7ce13c2e-c48d-41be-a824-18b8c32bc42b",
                            Password = "",
                            Subject = "mx003",
                            UserName = "dave"
                        },
                        new
                        {
                            Id = new Guid("53229d33-99e0-41b3-b18d-4f72127e3975"),
                            Active = true,
                            ConcurrencyStamp = "7b5654cc-53bd-46d4-89c9-bb2bac66127f",
                            Password = "",
                            Subject = "mx004",
                            UserName = "amos"
                        });
                });

            modelBuilder.Entity("Marvel.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29901673-8143-487a-ba79-e64cf68e97e3"),
                            ConcurrencyStamp = "e9872ce9-401d-4aeb-974c-111b93b5f0de",
                            Type = "given_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "David"
                        },
                        new
                        {
                            Id = new Guid("b638d744-de53-4785-b177-44a596b42860"),
                            ConcurrencyStamp = "95a504db-fca1-41f3-a87b-aba71f7b61e7",
                            Type = "family_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Flagg"
                        },
                        new
                        {
                            Id = new Guid("9c4b46d2-e473-4fd5-8ba7-8124876002b0"),
                            ConcurrencyStamp = "8e131977-a03f-4c2c-9f93-c680f4c579b3",
                            Type = "country",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "nl"
                        },
                        new
                        {
                            Id = new Guid("14d33550-754c-42fa-84a5-f33c41872723"),
                            ConcurrencyStamp = "401b17bd-4232-4d91-8421-8d257a8f555f",
                            Type = "role",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "FreeUser"
                        },
                        new
                        {
                            Id = new Guid("e243cc2b-3573-47b5-8e98-e57df08d9542"),
                            ConcurrencyStamp = "cc64b7cc-8a50-4dd6-9730-27d1ec6dd82d",
                            Type = "given_name",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Emma"
                        },
                        new
                        {
                            Id = new Guid("d0639cfe-050c-41c6-ad6e-5d33d4b6e50b"),
                            ConcurrencyStamp = "62055659-7bca-447c-9336-049ffd90bd57",
                            Type = "family_name",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Flagg"
                        },
                        new
                        {
                            Id = new Guid("602f7cdd-f803-4dfb-a38d-d1955aa23d49"),
                            ConcurrencyStamp = "12dc972f-5288-4d54-a7c0-38daacd435b6",
                            Type = "country",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "be"
                        },
                        new
                        {
                            Id = new Guid("bb5d86f6-b0ed-4c47-83da-c7bd57d15b3e"),
                            ConcurrencyStamp = "e3e1df03-04fd-4d4a-a404-a9771a99d65e",
                            Type = "role",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "PayingUser"
                        },
                        new
                        {
                            Id = new Guid("d13792bc-501c-4507-a32f-a80fc06703b9"),
                            ConcurrencyStamp = "d60d7c86-7268-47be-8b52-f47c89e6d669",
                            Type = "name",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "Alice Smith"
                        },
                        new
                        {
                            Id = new Guid("6dea5e18-d89d-4fde-b016-332e91e75865"),
                            ConcurrencyStamp = "31dd2b77-f976-4837-a5ce-8ee7c8c9849a",
                            Type = "given_name",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "Alice"
                        },
                        new
                        {
                            Id = new Guid("b8194566-38fa-41cc-a639-be619f780900"),
                            ConcurrencyStamp = "811dc2c2-d7c1-4776-a906-cc916b2ac2fe",
                            Type = "family_name",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "Smith"
                        },
                        new
                        {
                            Id = new Guid("1bce27cc-acb8-4152-b8a2-f18eebe4496b"),
                            ConcurrencyStamp = "c09b9817-5c26-434b-9fb8-b766c496e338",
                            Type = "email",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "AliceSmith@email.com"
                        },
                        new
                        {
                            Id = new Guid("ffbeb88a-f69f-43e7-898f-c33f9201fd1b"),
                            ConcurrencyStamp = "fad2176b-baf3-4751-9895-b9af44915480",
                            Type = "email_verified",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "true"
                        },
                        new
                        {
                            Id = new Guid("33bec90d-5a6d-44ce-a03b-5bc236b52aad"),
                            ConcurrencyStamp = "9026ebc5-ceb5-42a7-9d19-551b3cfda9f5",
                            Type = "website",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "http://alice.com"
                        },
                        new
                        {
                            Id = new Guid("3534044d-72de-4779-a44d-8d52e6491d31"),
                            ConcurrencyStamp = "419a9025-4be9-44ec-b017-525d82f9f378",
                            Type = "address",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("08a0b43e-e61e-4fb9-93e1-f85297699fe6"),
                            ConcurrencyStamp = "c5629e28-8627-4b71-85b2-d62a275b21ca",
                            Type = "employee_classification",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "B10"
                        },
                        new
                        {
                            Id = new Guid("206e0944-bdd8-4034-942a-5bf9c79954d9"),
                            ConcurrencyStamp = "b9626255-7426-47b4-b30c-a12962d2a1f6",
                            Type = "birthdate",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "1988-10-14"
                        },
                        new
                        {
                            Id = new Guid("274e6596-b8c0-40b7-a9ea-098a9f65873c"),
                            ConcurrencyStamp = "05dc2d24-61a4-4fae-b9f8-09da222ae778",
                            Type = "nationality",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "British"
                        },
                        new
                        {
                            Id = new Guid("937338dc-d539-43c2-95ca-94a893fe5c09"),
                            ConcurrencyStamp = "ebae07a7-840f-4232-afa2-6d4be4af0df9",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "toronto_au"
                        },
                        new
                        {
                            Id = new Guid("056b8da1-6fe5-4852-80a7-78f669b3d45f"),
                            ConcurrencyStamp = "a5cacc08-6af3-4852-9996-c51d541dea1d",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "public_market"
                        },
                        new
                        {
                            Id = new Guid("b0310056-7df8-4a25-946b-331f95d8d410"),
                            ConcurrencyStamp = "d03a8582-525e-4cad-8f20-1a8ebc1984b6",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "auth_demo_dev"
                        },
                        new
                        {
                            Id = new Guid("aa2461cb-dfd8-4315-84b7-feedfd29e736"),
                            ConcurrencyStamp = "4d1be39f-0c14-40e0-b832-14e92730e8be",
                            Type = "acl",
                            UserId = new Guid("23229d33-99e0-41b3-b18d-4f72127e3972"),
                            Value = "auth_demo_tester"
                        });
                });

            modelBuilder.Entity("Marvel.IDP.Entities.ExternalLogin", b =>
                {
                    b.HasOne("Marvel.IDP.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Marvel.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("Marvel.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Marvel.IDP.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
